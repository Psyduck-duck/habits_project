name: Django CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 .


  test:
    needs: lint
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Set environment variables
        run: echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          echo "TAG=${{ github.sha }}" >> .env
        shell: bash
      - name: Run tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
#          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
#          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
#          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
#          POSTGRES_HOST: localhost
#          POSTGRES_PORT: 5432
        run: python manage.py test


  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/habits_project:${{ github.sha }} .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/habits_project:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to Server
#        run: |
#          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
#          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/habits_project:${{ github.sha }}
#          docker stop habits_project || true
#          docker rm habits_project || true
#          cd /home/test2/habits_project && \
#          docker run -d --name habits_project --env-file .env -p 80:8000 ${{ secrets.DOCKER_HUB_USERNAME }}/habits_project:${{ github.sha }}
#          EOF
        run: |
          cd /test2/habits_project
          git fetch
          git switch develop
          git merge origin/develop
          docker compose up --build --force-recreate -d